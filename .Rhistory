data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.25))
plot(data$I[0:62])
plot(gradient(s))
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test/"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.25))
plot(data$I[0:62])
plot(gradient(s), '-')
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test/"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.25))
plot(data$I[0:62])
plot(gradient(s))
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test/"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
plot(data$I[0:62])
plot(gradient(s))
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test/"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
plot(data$I[0:62])
#plot(gradient(s))
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test/"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
print(s)
plot(data$I[0:62])
#plot(gradient(s))
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
#plot(data$I[0:62])
#lines(s)
output <- append(s, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
#plot(data$I[0:62])
#lines(s)
output <- append(s, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- smooth.spline(data$I[0:62], lambda=0.00002)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
s <- approx(seq(0, 61, 1), data$I[0:62])
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
#s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
s <- approx(seq(0, 61, 1), data$I[0:62])
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
s <- smooth.spline(data$I[0:62], lambda=0.00002)
#s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.27))
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "test/"
out_dir <- "out_test"#"dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.2))
plot(data$I[0:62])
lines(s)
output <- append(s, R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "SEIR_analysis//"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.2))
#plot(data$I[0:62])
#lines(s)
output <- append(s, R0)
#print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
library(pracma)
in_dir <- "SEIR_analysis//"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
s <- predict(loess(data$I[0:62]~seq(0, 61, 1), span=0.2))
s[s < 0] <- 0
#plot(data$I[0:62])
#lines(s)
output <- append(s, R0)
#print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
