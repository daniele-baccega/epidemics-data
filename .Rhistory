mean(mu.monday < mu.tuesday)
set.seed(12345)
#Size of the posterior sample
Niter <- 10^4
#Preparing the array for my posterior samples. 5 is the number of days in the week
mu.post <- array(dim = c(Niter, 5))
#Producing the posterior sample for each day in turn
for(j in 1:5){
mu.post[, j] <- rgamma(Niter, dtf$post.a[j], dtf$post.b[j])
}
head(mu.post)
ly(mu.post, 1, which.max)
print(table(m
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
head(mu.post)
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
mean(max.mu==3)
library(dplyr)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
setwd("~/Desktop/PhD/epidemics-data")
library(dplyr)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
if(length(output) != 63){
print(revrev_data_frame)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
if(length(output) != 63){
print(rev_data_frame)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
#if(length(output) != 63){
print(rev_data_frame)
#}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I[0:length(rev_data_frame-1)]), R0)
if(length(output) != 62){
print(rev_data_frame)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- rev(rev_data_frame)
output <- append(rev_data_frame$I[0:length(rev_data_frame-1)], R0)
if(length(output) != 62){
print(rev_data_frame)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- rev(rev_data_frame)
output <- append(rev_data_frame$I[0:length(rev_data_frame-1)], R0)
if(length(output) != 62){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:length(rev_data_frame-1)], R0)
if(length(output) != 62){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:length(rev_data_frame-1)], R0)
if(length(output) != 62){
print(data)
}
assert(length(output) == 62)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:length(rev_data_frame-1)], R0)
if(length(output) != 62){
print(data)
}
assert(length(output) == 62)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:61], R0)
if(length(output) != 62){
print(data)
}
assert(length(output) == 62)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:61], R0)
if(length(output) != 63){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:61], R0)
print(length(output))
if(length(output) != 63){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
transpose <- t(rev_data_frame)
transpose <- as.data.frame(transpose)
data <- rev(transpose)
data <- t(data)
data <- as.data.frame(data)
output <- append(rev_data_frame$I[0:62], R0)
print(length(output))
if(length(output) != 63){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
library(testit)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
reverse_dataframe <- function(dataframe){
transpose <- t(dataframe)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
return(rev_data_frame)
}
data <- reverse_dataframe(data)
data <- distinct(data, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
data <- reverse_dataframe(data)
output <- append(data$I[0:62], R0)
if(length(output) != 63){
print(data)
}
assert(length(output) == 63)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
