ylab('Mean Demand')
#Is the average demand on Tuesday higher than that on Monday?
set.seed(12345)
mu.monday <- rgamma(10^4, 750, 11)
mu.tuesday <- rgamma(10^4, 765, 11)
mean(mu.monday < mu.tuesday)
set.seed(12345)
#Size of the posterior sample
Niter <- 10^4
#Preparing the array for my posterior samples. 5 is the number of days in the week
mu.post <- array(dim = c(Niter, 5))
#Producing the posterior sample for each day in turn
for(j in 1:5){
mu.post[, j] <- rgamma(Niter, dtf$post.a[j], dtf$post.b[j])
}
head(mu.post)
ly(mu.post, 1, which.max)
print(table(m
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
head(mu.post)
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
mean(max.mu==3)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
setwd("~/Desktop/PhD/epidemics-data")
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
if(last_time != row["Time"]){
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
c
q
quit()
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
last_time <- rev_data_frame$Time[1] + 1
lapply(rev_data_frame, function(row){
if(last_time != row["Time"]){
data_unique <- rbind(data_unique, row)
last_time <- row["Time"]
}
})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
data <- read.csv("test/SEIR-analysis-1.trace", header=TRUE, sep="")
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame
for(row in rev_data_frame)
print(row)
rev_data_frame.drop_duplicates()
rev_data_frame
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
mydata %>% distinct(Time, .keep_all= TRUE)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame %>% distinct(Time, .keep_all= TRUE)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame %>% distinct(Time, .keep_all= TRUE)
print(rev_data_frame)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
#transpose <- t(data)
#transpose <- as.data.frame(transpose)
#rev_data_frame <- rev(transpose)
#rev_data_frame <- t(rev_data_frame)
#rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame %>% distinct(Time, .keep_all= TRUE)
print(rev_data_frame)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
#transpose <- t(data)
#transpose <- as.data.frame(transpose)
#rev_data_frame <- rev(transpose)
#rev_data_frame <- t(rev_data_frame)
#rev_data_frame <- as.data.frame(rev_data_frame)
data %>% distinct(Time, .keep_all= TRUE)
print(data)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(data$I, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
#transpose <- t(data)
#transpose <- as.data.frame(transpose)
#rev_data_frame <- rev(transpose)
#rev_data_frame <- t(rev_data_frame)
#rev_data_frame <- as.data.frame(rev_data_frame)
data %>% distinct(Time)
print(data)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(data$I, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
#transpose <- t(data)
#transpose <- as.data.frame(transpose)
#rev_data_frame <- rev(transpose)
#rev_data_frame <- t(rev_data_frame)
#rev_data_frame <- as.data.frame(rev_data_frame)
data <- distinct(data, Time, .keep_all= TRUE)
print(data)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(data$I, R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
print(rev_data_frame)
#last_time <- rev_data_frame$Time[1] + 1
#lapply(rev_data_frame, function(row){
#if(last_time != row["Time"]){
#  data_unique <- rbind(data_unique, row)
#  last_time <- row["Time"]
#}
#})
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "test/" #"SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
print(output)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
library(dplyr)
in_dir <- "SEIR_analysis/"
out_dir <- "dataset/Stochastic/data_inf_rate_0.00001-0.015/"
load(paste0(in_dir, "SEIR-analysis.RData"))
listFiles <- list.files(in_dir, pattern = ".trace")
data_unique <- data.frame()
lapply(listFiles, function(x){
data <- read.csv(paste0(in_dir, x), header=TRUE, sep="")
ID <- strtoi(gsub(".*[-]([^.]+)[.].*", "\\1", x))
S0 <- config[[1]][[ID]][[3]][[1]]
infection_rate <- config[[3]][[ID]][[3]]
recovery_rate <- config[[4]][[ID]][[3]]
transpose <- t(data)
transpose <- as.data.frame(transpose)
rev_data_frame <- rev(transpose)
rev_data_frame <- t(rev_data_frame)
rev_data_frame <- as.data.frame(rev_data_frame)
rev_data_frame <- distinct(rev_data_frame, Time, .keep_all= TRUE)
R0 <- (infection_rate * S0) / recovery_rate
output <- append(rev(rev_data_frame$I), R0)
write.table(output, paste0(out_dir, x), col.names=FALSE, row.names=FALSE)
})
