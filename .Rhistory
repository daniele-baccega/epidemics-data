library(epimod)
.Platform$file.sep
?file.path
tools::file_path_as_absolute(".")
ls
clear
paste0(file.path(".",basename("."), fsep = .Platform$file.sep), .Platform$file.sep))
paste0(file.path(".",basename("."), fsep = .Platform$file.sep), .Platform$file.sep)
paste0(file.path(".",basename("."), fsep = .Platform$file.sep), .Platform$file.sep))
?basename
basename(file.path("","p1","p2","p3", c("file1", "file2")))
getwd()
?unlink
tools::file_path_sans_ext(".")
?tools::file_path_sans_ext
tools::file_path_sans_ext("rfewf.PNPRO")
tools::file_path_sans_ext(basename(rfewf.PNPRO))
tools::file_path_sans_ext(basename("rfewf.PNPRO"))
setwd("~/Desktop/BorsaDiStudio/epimod/R")
model_generation
model_generation()
setwd("~/Desktop/BorsaDiStudio/epimod/Example")
?common_test
library(epimod)
?common_test
?sample
set.seed(20202020)
boxes <- sample(c('GG','SS','GS'),
size=10^5,replace=T,prob=c(1/3,1/3,1/3))
boxes
table(boxes)/10^5
dagger <- rbinom(10^5,size=1,prob=c(1,.5,0)[as.numeric(as.factor(boxes))])
?rbinom
boxes[1:5]
as.factor(boxes)[1:5]
as.numeric(as.factor(boxes))[1:5]
c(1,.5,0)[as.numeric(as.factor(boxes))[1:5]]
table(dagger)/10^5
dtf <- data.frame(boxes=boxes, dagger=dagger)
print(head(dtf))
table(dagger)/10^5
the.other.dagger <- function(box,dagger){
1*(box=='GG')+0*(box=='SS')+(1-dagger)*(box=='GS')
}
dtf$other <- the.other.dagger(dtf$boxes,dtf$dagger)
print(head(dtf))
table(dtf$other[dtf$dagger==1])
table(dtf$other[dtf$dagger==1])/sum(table(dtf$other[dtf$dagger==1]))
View(dtf)
table(dtf$other[dtf$dagger==1])/sum(table(dtf$other[dtf$dagger==1]))
table(dtf$dagger)
qgamma(0.025,1020,15)
qgamma(0.975,1020,15)
920/15
50+65+72+63+70
323/5.02
323/(5.02^2)
320.01/5.01
320.01/(5.01^2)
qgamma(0.025,323,5.02)
qgamma(0.975,323,5.02)
323/(5.02^2)
323/(5.02*5.02)
mu <- rgamma(10^5, 1020, 15)
mu
rgamma?
q
?rgamma
mu <- rgamma(10^5, 1020, 15)
mu
mean(mu)
var(mu)
quantile(mu, c(.025, .975))
rpois(5, 68)
?rpois
et.seed(20202020)
set.seed(20202020)
rpois(5, 68)
rpois(5, 68)
set.seed(20202020)
rpois(5, 68)
set.seed(20202020)
rpois(5, 68)
set.seed(12345)
#Number of simulations
n.sim <- 10^4
mu <- rgamma(n.sim, 1020, 15)
x.tilde <- rpois(n.sim, mu)
x.tilde
set.seed(12345)
#Number of simulations
n.sim <- 10^4
#u    ~ Gamma(700, 10), the prior distribution
#xi/u ~ Pois(u) i = 1, ..., n, the likelihood
#u/x  ~ Gamma(1020, 15), the posterior distribution
#Simulate u* from its posterior Gamma(1020, 15) distribution
mu <- rgamma(n.sim, 1020, 15)
#Simulate x.tilde from the data-generating mechanism Pois(u*)
x.tilde <- rpois(n.sim, mu)
hist(x.tilde,seq(30.5,110.5,1),freq=F,
xlab='Number of Sandwiches',
ylab='Post. pred. density',main='',
col='plum')
mean(x.tilde)
quantile(x.tilde, c(.025, .975))
set.seed(12345)
#Number of simulations
n.sim <- 10^4
#u    ~ Gamma(700, 10), the prior distribution
#xi/u ~ Pois(u) i = 1, ..., n, the likelihood
#u/x  ~ Gamma(1020, 15), the posterior distribution
#Simulate u* from its posterior Gamma(1020, 15) distribution
mu <- rgamma(n.sim, 1020, 15)
#Simulate x.tilde from the data-generating mechanism Pois(u*)
x.tilde <- rpois(n.sim, mu)
hist(x.tilde,
seq(30.5, 110.5, 1),
freq = F,
xlab = 'Number of Sandwiches',
ylab = 'Post. pred. density',
main = '',
col = 'plum')
mean(x.tilde)
quantile(x.tilde, c(.025, .975))
#Proportion of values abose 80
mean(x.tilde >= 80)
quantile(x.tilde, .99)
#Our dataset
dtf <- data.frame(Day = factor(c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')),
x = c(50, 65, 72, 63, 70))
#Parameters a and b for the posterior distribution:
dtf$post.a <- 700+dtf$x
dtf$post.b <- 10+1
#Posterior mean:
dtf$post.mean <- round(dtf$post.a / dtf$post.b, 1)
#Posterior credible intervals (lower and upper limits)
dtf$post.lo <- round(qgamma(.025, dtf$post.a, dtf$post.b), 1)
dtf$post.hi <- round(qgamma(.975, dtf$post.a, dtf$post.b), 1)
knitr::kable(dtf, caption = 'Sandwich Demand')
library(ggplot2)
ggplot(data = dtf) +
geom_point(aes(x = Day, y = post.mean)) +
geom_segment(aes(x = Day, xend = Day, y = post.lo, yend = post.hi)) +
ylab('Mean Demand')
factor(c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'))
set.seed(12345)
#Number of simulations
n.sim <- 10^4
#u    ~ Gamma(700, 10), the prior distribution
#xi/u ~ Pois(u) i = 1, ..., n, the likelihood
#u/x  ~ Gamma(1020, 15), the posterior distribution
#Simulate u* from its posterior Gamma(1020, 15) distribution
mu <- rgamma(n.sim, 1020, 15)
#Simulate x.tilde from the data-generating mechanism Pois(u*)
x.tilde <- rpois(n.sim, mu)
hist(x.tilde,
seq(30.5, 110.5, 1),
freq = F,
xlab = 'Number of Sandwiches',
ylab = 'Post. pred. density',
main = '',
col = 'plum')
mean(x.tilde)
quantile(x.tilde, c(.025, .975))
#Proportion of values above 80
mean(x.tilde >= 80)
#How much does the business need to stock, if they want to have less than 1% chance of running out?
#In other words, 99% of the posterior predictive distribution for x.tilde lie at or below 89.
#Thus, in order to be 99% certain not to run out of ingredients, the business should stock ingredients
#for 90 daily sandwiches.
quantile(x.tilde, .99)
#The sandwich business owner has heard that the average demand on Tuesday tends to be higher than the
#average demand on Monday, and would like to see, if this is true for them.
#But now, instead of treating all days as exchangeable, we are going to use Bayesâ€™ formula to derive
#posterior distribution for each day of the week. And we are still going to use the Gamma(700, 10) as
#the prior for every weekday-specific u.
#Our dataset
dtf <- data.frame(Day = factor(c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'),
levels = c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')),
x = c(50, 65, 72, 63, 70))
#Parameters a and b for the posterior distribution:
dtf$post.a <- 700+dtf$x
dtf$post.b <- 10+1
#Posterior mean:
dtf$post.mean <- round(dtf$post.a / dtf$post.b, 1)
#Posterior credible intervals (lower and upper limits)
dtf$post.lo <- round(qgamma(.025, dtf$post.a, dtf$post.b), 1)
dtf$post.hi <- round(qgamma(.975, dtf$post.a, dtf$post.b), 1)
knitr::kable(dtf, caption = 'Sandwich Demand')
library(ggplot2)
ggplot(data = dtf) +
geom_point(aes(x = Day, y = post.mean)) +
geom_segment(aes(x = Day, xend = Day, y = post.lo, yend = post.hi)) +
ylab('Mean Demand')
#Is the average demand on Tuesday higher than that on Monday?
set.seed(12345)
mu.monday <- rgamma(10^4, 750, 11)
mu.tuesday <- rgamma(10^4, 765, 11)
mean(mu.monday < mu.tuesday)
set.seed(12345)
#Size of the posterior sample
Niter <- 10^4
#Preparing the array for my posterior samples. 5 is the number of days in the week
mu.post <- array(dim = c(Niter, 5))
#Producing the posterior sample for each day in turn
for(j in 1:5){
mu.post[, j] <- rgamma(Niter, dtf$post.a[j], dtf$post.b[j])
}
head(mu.post)
ly(mu.post, 1, which.max)
print(table(m
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
head(mu.post)
max.mu <- apply(mu.post, 1, which.max)
print(table(max.mu))
mean(max.mu==3)
setwd("~/Desktop/PhD/epidemics-data")
load("SEIR_analysis/SEIR-analysis.RData")
View(config)
